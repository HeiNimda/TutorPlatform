# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-03-18 16:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import libs.uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        ('customer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uid', models.CharField(default=libs.uuid.create_student_uid, max_length=16, unique=True, verbose_name='学生ID')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('phone', models.CharField(max_length=16, verbose_name='电话')),
                ('times', models.CharField(default='一周一次', help_text='1：一周一次， 2：一周2次，依次内推，最大7次, 0: 面议', max_length=64, verbose_name='补习次数')),
                ('money', models.CharField(default='面议', max_length=12, verbose_name='金钱')),
                ('sex', models.IntegerField(default=0, help_text='0：女 1：男', verbose_name='性别')),
                ('teacher_sex', models.IntegerField(default=0, help_text='0：女 1：男', verbose_name='教师性别')),
                ('address', models.CharField(max_length=128, verbose_name='上课地点')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('extra', models.CharField(blank=True, max_length=128, null=True, verbose_name='其他')),
                ('basis', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.Basis', verbose_name='学生基础')),
                ('city', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.City', verbose_name='城市')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.Customer', verbose_name='用户')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Level', verbose_name='年级')),
                ('require', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='common.TeacherRequire', verbose_name='教师资质')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentFollowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower_type', models.IntegerField(default=1, help_text='1：老师 2：学生', verbose_name='收藏者类型，目前学生仅能被教师收藏')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('customer', models.ForeignKey(help_text='收藏用户', null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
                ('student', models.ForeignKey(help_text='学生', on_delete=django.db.models.deletion.CASCADE, to='student.Student')),
            ],
            options={
                'verbose_name': '被收藏学生',
                'verbose_name_plural': '被收藏学生',
            },
        ),
        migrations.CreateModel(
            name='StudentSubjectsShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_subject', to='common.Subject', verbose_name='学科')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student', verbose_name='学生')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTeacherTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student', verbose_name='学生')),
                ('teacher_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.TeacherType', verbose_name='教学特点')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTypesShip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student', verbose_name='学生')),
                ('student_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.StudentType', verbose_name='存在问题')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
